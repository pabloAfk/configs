#!/usr/bin/env python

import gi
gi.require_version("Gtk", "4.0")
gi.require_version("Adw", "1")
from gi.repository import Gtk, Adw, Gio, GLib
import subprocess

class PowerMenu(Gtk.Application):
    def __init__(self):
        super().__init__(application_id="com.example.PowerMenu")
        self.window = None

    def do_activate(self):
        if not self.window:
            self.window = Adw.ApplicationWindow(application=self)
            self.window.set_title("Power Menu")
            self.window.set_default_size(300, 150)
            self.window.set_resizable(False)

            # Estilão
            style_provider = Gtk.CssProvider()
            style_provider.load_from_data(b"""
                button {
                    font-size: 18px;
                    border-radius: 15px;
                    padding: 10px;
                    margin: 10px;
                }
                button:hover {
                    background: #0f0f0f;
                    color: white;
                }
            """)
            Gtk.StyleContext.add_provider_for_display(
                self.window.get_display(),
                style_provider,
                Gtk.STYLE_PROVIDER_PRIORITY_APPLICATION
            )

            # Layout bonitão
            box = Gtk.Box(orientation=Gtk.Orientation.VERTICAL, spacing=10, margin_top=20, margin_bottom=20, margin_start=20, margin_end=20)
            self.window.set_content(box)

            # Botões
            btn_shutdown = Gtk.Button(label="Desligar")
            btn_shutdown.connect("clicked", self.shutdown)

            btn_reboot = Gtk.Button(label="Reiniciar")
            btn_reboot.connect("clicked", self.reboot)

            btn_suspend = Gtk.Button(label="Suspender")
            btn_suspend.connect("clicked", self.suspend)

            box.append(btn_shutdown)
            box.append(btn_reboot)
            box.append(btn_suspend)

        self.window.present()

    def shutdown(self, button):
        subprocess.call(["systemctl", "poweroff"])

    def reboot(self, button):
        subprocess.call(["systemctl", "reboot"])

    def suspend(self, button):
        subprocess.call(["systemctl", "suspend"])

app = PowerMenu()
app.run()
